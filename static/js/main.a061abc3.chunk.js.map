{"version":3,"sources":["components/form/form.js","components/footer/footer.js","components/if/if.js","components/history/history.js","components/header/header.js","components/results/results.js","app.js","index.js"],"names":["Form","props","handleChange","event","setState","value","target","state","method","handleSubmit","bind","preventDefault","restOption","this","fetch","response","headers","JSON","stringify","json","data","results","apiCall","url","body","handler","id","onSubmit","name","type","onChange","placeholder","className","onClick","React","Component","Footer","If","condition","children","render","History","toggleDetails","console","log","details","handleReRun","archive","map","item","idx","key","Header","activeClassName","exact","to","Results","App","history","handleForm","getHistory","push","localStorage","setItem","parse","getItem","path","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.a061abc3.chunk.js","sourcesContent":["/**\n * Form\n * @component Form\n */\n\n// TODO: add loading image while awaiting fetch\n\nimport React from 'react';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      method: 'get',\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange = (event) => {\n    this.setState({ value: event.target.value });\n  }\n\n  // handleClick = (event) => {\n  //   event.preventDefault();\n  //   const { name, value } = event.target;\n  //   this.setState({ [name]: value }, () => console.log(this.state));\n  // }\n\n  async handleSubmit (event) {\n    event.preventDefault();\n\n    let restOption = {\n      method: this.state.method,\n    }\n    // console.log(this.state);\n\n    let response = await fetch(this.state.value, restOption);\n    let headers = JSON.stringify(response.headers, null, 2);\n    let data = await response.json();\n    let results = JSON.stringify(data, null, 2);\n    let apiCall = { url: this.state.value, method: this.state.method, body: results }\n\n    this.props.handler(headers, results, apiCall);\n  }\n\n  render() {\n    return (\n      <div id=\"form\">\n        <form onSubmit={this.handleSubmit}>\n\n          <legend>Enter API URL, and click on desired METHOD</legend>\n\n          <input name=\"url\" id=\"urlInput\" type=\"text\" value={this.state.value} onChange={this.handleChange} placeholder=\"URL\" />\n\n          <input name=\"submit\" className=\"button\" id=\"submitButton\" type=\"submit\" value=\"GO\" />\n        </form>\n\n        <section id=\"methods\">\n          <input name=\"get\" className=\"button\" id=\"get\" onClick={() => this.setState({\n            method: 'get',\n          })} type=\"button\" value=\"GET\" />\n\n          <input name=\"post\" className=\"button\" id=\"post\" onClick={() => this.setState({\n            method: 'post',\n          })} type=\"button\" value=\"POST\" />\n\n          <input name=\"put\" className=\"button\" id=\"put\" onClick={() => this.setState({\n            method: 'put',\n          })} type=\"button\" value=\"PUT\" />\n\n          {/* <input name=\"patch\" className=\"button\" id=\"patch\" onClick={() => this.setState({\n            method: 'patch',\n          })} type=\"button\" value=\"PATCH\" /> */}\n\n          <input name=\"delete\" className=\"button\" id=\"delete\" onClick={() => this.setState({\n            method: 'delete',\n          })} type=\"button\" value=\"DELETE\" />\n        </section>\n\n        {/* <section id=\"apiRequest\">\n          <p>Request: {this.state.method} {this.state.value}</p>\n        </section> */}\n      </div>\n    );\n  }\n}\n\nexport default Form;","/**\n * Footer\n * @component Footer\n */\n\nimport React from 'react';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <p id=\"footer\">\n        &copy; 2020 Biermann - Code Fellows Project\n      </p>\n    );\n  }\n}\n\nexport default Footer;","/**\n * IF conditional\n */\n\nconst render = (condition = false, children = null) => {\n  return condition ? children : null;\n};\n\nconst If = (props) => {\n  return render(props.condition, props.children);\n};\n\nexport default If;\n","/**\n * History\n * @component History\n */\n\nimport React from 'react';\nimport If from '../if/if.js';\nimport JSONPretty from 'react-json-pretty';\n\nclass History extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      details: false,\n    }\n  }\n\n  toggleDetails = (event) => {\n    event.preventDefault();\n    console.log('toggling details');\n    if (!this.state.details) {\n      this.setState({ details: true });\n    } else {\n      this.setState({ details: false });\n    }\n  }\n\n  handleReRun = (event) => {\n    // TODO:\n  // Add a button to each to re-run the search\n  // Redirect to the home page to show the results\n    event.preventDefault();\n    console.log('handling rerun');\n  }\n\n  render() {\n    return (\n      <div id=\"historyPage\">\n        <h1>History</h1>\n        <section id=\"apiCalls\">\n          <ul>\n            {this.props.archive.map((item, idx) => {\n              return (\n                <li key={idx} >\n                  <JSONPretty id=\"json-pretty\" onClick={this.toggleDetails} data={ item.method + ' ' + item.url }></JSONPretty>\n                  <If condition={this.state.details}>\n                  <p>\n                  <JSONPretty id=\"json-pretty\" data={ item.body }></JSONPretty>\n                  </p>\n                  <input type=\"button\" id=\"reRun\" value=\"Re-Run Search\" onClick={this.handleReRun} />\n                  </If>\n                </li>\n              );\n            })}\n\n          </ul>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default History;\n\n// Show full details of each search\n\n","/**\n * Header\n * @component Header\n */\n\nimport React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nclass Header extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <h1>\n          Resty ... A Simple ReST Client\n        </h1>\n        <nav>\n          <ul>\n            <li><Link activeClassName='selected' exact to=\"/\">Home</Link></li>\n            <li><Link activeClassName='selected' exact to=\"/history\">History</Link></li>\n          </ul>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Header;","/**\n * Results\n * @component Results\n */\n\n// TODO: populate details in the state (method and url) and also in the url bar when user clicks on link in short history onClick={this.populate?}\n\nimport React from 'react';\nimport If from '../if/if.js';\nimport JSONPretty from 'react-json-pretty';\n\nclass Results extends React.Component {\n\n  render() {\n    return (\n      <div id=\"results\">\n        <section id=\"shortHistory\">\n          <ul>\n            {this.props.archive.map((item, idx) => {\n              return (\n                <li key={idx} >\n                  <JSONPretty id=\"json-pretty\" data={item.method + ' ' + item.url}></JSONPretty>\n                </li>\n              );\n            })}\n          </ul>\n        </section>\n\n        <If condition={this.props.results}>\n          <section id=\"currentResults\">\n            <ul>\n              <JSONPretty id=\"json-pretty\" data={this.props.headers}></JSONPretty>\n            </ul>\n            <ul>\n              <JSONPretty id=\"json-pretty\" data={this.props.results}></JSONPretty>\n            </ul>\n          </section>\n        </If>\n      </div>\n    );\n  }\n}\n\nexport default Results;\n","/** App\n * Serves as the container for all sub-components\n */\n\nimport React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './design/design.scss';\nimport Form from './components/form/form.js';\nimport Footer from './components/footer/footer.js';\nimport History from './components/history/history.js';\nimport Header from './components/header/header.js';\nimport Results from './components/results/results.js';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      headers: '',\n      results: '',\n      history: [],\n      archive: [],\n    };\n\n    this.handleForm = this.handleForm.bind(this);\n    this.getHistory = this.getHistory.bind(this);\n  }\n\n  handleForm(headers, results, apiCall) {\n    this.setState({ headers, results });\n    this.state.history.push(apiCall);\n    localStorage.setItem('history', JSON.stringify(this.state.history));\n    this.getHistory();\n  }\n  \n  async getHistory() {\n    let history = await JSON.parse(localStorage.getItem('history'));\n    this.setState({ archive: history });\n  }\n\n  render() {\n    return (\n      <div>\n        <BrowserRouter>\n          <Header />\n\n          <Route exact path=\"/\">\n            <Form handler={this.handleForm} />\n            <Results headers={this.state.headers} results={this.state.results} archive={this.state.archive}/>\n          </Route>\n\n          <Route exact path=\"/history\">\n            <History archive={this.state.archive}/>\n          </Route>\n\n          <Footer />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;","// From class code\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\nconsole.log(App);\n\n// attach component to the DOM\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);"],"sourceRoot":""}