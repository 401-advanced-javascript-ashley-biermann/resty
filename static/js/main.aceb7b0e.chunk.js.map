{"version":3,"sources":["components/form/form.js","components/footer/footer.js","components/if/if.js","components/modal/modal.js","components/history/history.js","components/header/header.js","components/results/results.js","app.js","index.js"],"names":["Form","props","handleChange","event","setState","value","target","state","method","url","handleSubmit","bind","preventDefault","restOption","this","fetch","response","headers","JSON","stringify","json","data","results","apiCall","body","handler","id","onSubmit","name","type","onChange","placeholder","className","onClick","React","Component","Footer","If","condition","children","render","Modal","toggle","e","visible","History","toggleDetails","details","handleReRun","idx","getAttribute","item","archive","redirect","to","map","key","Header","activeClassName","exact","Results","App","handleForm","history","push","localStorage","setItem","getHistory","populateFromRedirect","a","parse","getItem","path","console","log","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.aceb7b0e.chunk.js","sourcesContent":["/**\n * Form\n * @component Form\n */\n\n// TODO: add loading image while awaiting fetch\n\nimport React from 'react';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      method: this.props.method ? this.props.method : 'get',\n      value: this.props.url ? this.props.url : '',\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange = (event) => {\n    this.setState({ value: event.target.value });\n  }\n\n  // handleClick = (event) => {\n  //   event.preventDefault();\n  //   const { name, value } = event.target;\n  //   this.setState({ [name]: value }, () => console.log(this.state));\n  // }\n\n  async handleSubmit (event) {\n    event.preventDefault();\n\n    let restOption = {\n      method: this.state.method,\n    }\n\n    let response = await fetch(this.state.value, restOption);\n    let headers = JSON.stringify(response.headers, null, 2);\n    let data = await response.json();\n    let results = JSON.stringify(data, null, 2);\n    let apiCall = { url: this.state.value, method: this.state.method, body: results }\n\n    this.props.handler(headers, results, apiCall);\n  }\n\n  render() {\n    return (\n      <div id=\"form\">\n        <form onSubmit={this.handleSubmit}>\n\n          <legend>Enter API URL, and click on desired METHOD</legend>\n\n          <input name=\"url\" id=\"urlInput\" type=\"text\" value={this.state.value} onChange={this.handleChange} placeholder=\"URL\" />\n\n          <input name=\"submit\" className=\"button\" id=\"submitButton\" type=\"submit\" value=\"GO\" />\n        </form>\n\n        <section id=\"methods\">\n          <input name=\"get\" className=\"button\" id=\"get\" onClick={() => this.setState({\n            method: 'get',\n          })} type=\"button\" value=\"GET\" />\n\n          <input name=\"post\" className=\"button\" id=\"post\" onClick={() => this.setState({\n            method: 'post',\n          })} type=\"button\" value=\"POST\" />\n\n          <input name=\"put\" className=\"button\" id=\"put\" onClick={() => this.setState({\n            method: 'put',\n          })} type=\"button\" value=\"PUT\" />\n\n          {/* <input name=\"patch\" className=\"button\" id=\"patch\" onClick={() => this.setState({\n            method: 'patch',\n          })} type=\"button\" value=\"PATCH\" /> */}\n\n          <input name=\"delete\" className=\"button\" id=\"delete\" onClick={() => this.setState({\n            method: 'delete',\n          })} type=\"button\" value=\"DELETE\" />\n        </section>\n\n        {/* <section id=\"apiRequest\">\n          <p>Request: {this.state.method} {this.state.value}</p>\n        </section> */}\n      </div>\n    );\n  }\n}\n\nexport default Form;","/**\n * Footer\n * @component Footer\n */\n\nimport React from 'react';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <p id=\"footer\">\n        &copy; 2020 Biermann - Code Fellows Project\n      </p>\n    );\n  }\n}\n\nexport default Footer;","/**\n * IF conditional\n */\n\nconst render = (condition = false, children = null) => {\n  return condition ? children : null;\n};\n\nconst If = (props) => {\n  return render(props.condition, props.children);\n};\n\nexport default If;\n","import React from 'react';\n\nimport If from '../if/if.js';\n\nclass Modal extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      visible: false,\n    }\n  }\n\n  toggle = (e) => {\n    e.preventDefault();\n    this.setState({ visible: !this.state.visible });\n  }\n\n  render() {\n    return (\n      <div id=\"modal-container\">\n        <If condition={this.state.visible}>\n          {this.props.children}\n          <button onClick={this.toggle}>Hide Results Body</button>\n        </If>\n        <If condition={!this.state.visible}>\n          <button onClick={this.toggle}>Show Results Body</button>\n        </If>\n      </div>\n    )\n  }\n}\n\nexport default Modal;\n","/**\n * History\n * @component History\n */\n\nimport React from 'react';\n// import If from '../if/if.js';\nimport Modal from '../modal/modal.js';\nimport JSONPretty from 'react-json-pretty';\nimport { Redirect } from \"react-router-dom\";\n\nclass History extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      details: false,\n      redirect: null,\n    };\n  }\n\n  toggleDetails = (event) => {\n\n    // toggleDetails = (idx) => {\n    // let temp = this.state.details;\n    // temp[idx] = !temp[idx];\n    // this.setState( {details: temp});\n    // can be used with IF\n\n    event.preventDefault();\n    if (!this.state.details) {\n      this.setState({ details: true });\n    } else {\n      this.setState({ details: false });\n    }\n  }\n\n  handleReRun = (event) => {\n    event.preventDefault();\n    let idx = event.target.getAttribute('idx');\n    let item = this.props.archive[idx];\n    this.props.handler(item.method, item.url);\n    this.setState({ redirect: \"/\" });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />\n    }\n    return (\n      <div id=\"historyPage\">\n        <h1>History</h1>\n        <section id=\"apiCalls\">\n          <ul>\n            {this.props.archive.map((item, idx) => {\n              return (\n                <li key={idx} id={idx}>\n\n                  <JSONPretty id={idx} /*onClick={this.toggleDetails}*/ data={item.method + ' ' + item.url}></JSONPretty>\n\n                  {/* <If condition={ this.state.details[idx] === true }> */}\n\n                  <Modal condition={this.state.details}>\n\n                    <p>\n                      <JSONPretty data={item.body}></JSONPretty>\n                    </p>\n                  </Modal>\n\n                  {/* </If> */}\n                  <input type=\"button\" value=\"Re-Run Search\" idx={idx} onClick={this.handleReRun} method={item.method} url={item.url} />\n                </li>\n              );\n            })}\n\n          </ul>\n        </section >\n      </div >\n    );\n  }\n}\n\nexport default History;\n\n// Show full details of each search\n\n","/**\n * Header\n * @component Header\n */\n\nimport React from 'react';\nimport { NavLink as Link } from 'react-router-dom';\n\nclass Header extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <h1>\n          Resty ... A Simple ReST Client\n        </h1>\n        <nav>\n          <ul>\n            <li><Link activeClassName='selected' exact to=\"/\">Home</Link></li>\n            <li><Link activeClassName='selected' exact to=\"/history\">History</Link></li>\n          </ul>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Header;","/**\n * Results\n * @component Results\n */\n\n// TODO: populate details in the state (method and url) and also in the url bar when user clicks on link in short history onClick={this.populate?}\n\nimport React from 'react';\nimport If from '../if/if.js';\nimport JSONPretty from 'react-json-pretty';\n\nclass Results extends React.Component {\n\n  render() {\n    return (\n      <div id=\"results\">\n        <section id=\"shortHistory\">\n          <ul>\n            {this.props.archive.map((item, idx) => {\n              return (\n                <li key={idx} >\n                  <JSONPretty id=\"json-pretty\" data={item.method + ' ' + item.url}></JSONPretty>\n                </li>\n              );\n            })}\n          </ul>\n        </section>\n\n        <If condition={this.props.results}>\n          <section id=\"currentResults\">\n            <ul>\n              <JSONPretty id=\"json-pretty\" data={this.props.headers}></JSONPretty>\n            </ul>\n            <ul>\n              <JSONPretty id=\"json-pretty\" data={this.props.results}></JSONPretty>\n            </ul>\n          </section>\n        </If>\n      </div>\n    );\n  }\n}\n\nexport default Results;\n","/** App\n * Serves as the container for all sub-components\n */\n\nimport React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './design/design.scss';\nimport Form from './components/form/form.js';\nimport Footer from './components/footer/footer.js';\nimport History from './components/history/history.js';\nimport Header from './components/header/header.js';\nimport Results from './components/results/results.js';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      headers: '',\n      results: '',\n      history: [],\n      archive: [],\n      method: '',\n      url: '',\n    };\n\n    this.getHistory = this.getHistory.bind(this);\n  }\n\n  handleForm = (headers, results, apiCall) => {\n    this.setState({ headers, results });\n    this.state.history.push(apiCall);\n    localStorage.setItem('history', JSON.stringify(this.state.history));\n    this.getHistory();\n  }\n\n  populateFromRedirect = async (method, url) => {\n    await this.setState({ method: method, url: url });\n  }\n\n  async getHistory() {\n    let history = await JSON.parse(localStorage.getItem('history'));\n    this.setState({ archive: history });\n  }\n\n  render() {\n    return (\n      <div>\n        <BrowserRouter>\n          <Header />\n\n          <Route exact path=\"/\">\n            <Form handler={this.handleForm} method={this.state.method} url={this.state.url} />\n            <Results headers={this.state.headers} results={this.state.results} archive={this.state.archive} />\n          </Route>\n\n          <Route exact path=\"/history\">\n            <History archive={this.state.archive} handler={this.populateFromRedirect} />\n          </Route>\n\n          <Footer />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;","// From class code\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\nconsole.log(App);\n\n// attach component to the DOM\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);"],"sourceRoot":""}