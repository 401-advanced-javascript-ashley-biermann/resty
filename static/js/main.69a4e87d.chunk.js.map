{"version":3,"sources":["components/header/header.js","components/form/form.js","components/results/results.js","components/footer/footer.js","app.js","index.js"],"names":["Header","React","Component","Form","props","state","value","method","display","handleChange","bind","handleSubmit","event","this","setState","target","preventDefault","fetch","data","json","count","results","reduce","list","pokemon","name","url","console","log","handler","id","onSubmit","type","onChange","placeholder","className","onClick","Results","Object","keys","length","map","idx","key","href","Footer","App","handleForm","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.69a4e87d.chunk.js","sourcesContent":["/**\n * Header\n * @component Header\n */\n\nimport React from 'react';\n\nclass Header extends React.Component {\n\n  render() {\n    return (\n      <h1\n        // onClick={() => this.props.handleState('state words')}\n      >\n        Resty ... A Simple ReST Client \n        {/* {this.props.words} */}\n      </h1>\n    );\n  }\n}\n\nexport default Header;","/**\n * Form\n * @component Form\n */\n\nimport React from 'react';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      method: 'get',\n      display: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  //   On submit\n  // Send the API results back to the <App> using the method sent down in props\n\n  async handleSubmit(event) {\n    event.preventDefault();\n\n    let data = await fetch('https://pokeapi.co/api/v2/pokemon');\n    let json = await data.json();\n\n    let count =json.count;\n\n    let results = json.results.reduce((list, pokemon) => {\n      list[pokemon.name] = pokemon.url;\n      return list;\n    }, {});\n    console.log(count);\n    console.log(results);\n    this.props.handler(count, results);\n\n    // this.setState({ display: this.state.method + '   ' + this.state.value });\n  }\n\n  render() {\n    return (\n      <div id=\"form\">\n        <form onSubmit={this.handleSubmit}> \n\n          <legend>Enter API URL, and click on desired METHOD</legend>\n\n          <input id=\"urlInput\" type=\"text\" value={this.state.value} onChange={this.handleChange} placeholder=\"URL\"></input>\n\n          <input className=\"button\" id=\"submitButton\" type=\"submit\" value=\"GO\"></input>\n        </form>\n\n        <section id=\"methods\">\n          <input className=\"button\" id=\"get\" onClick={() => this.setState({\n            method: 'get',\n          })} type=\"button\" value=\"GET\"></input>\n\n          <input className=\"button\" id=\"post\" onClick={() => this.setState({\n            method: 'post',\n          })} type=\"button\" value=\"POST\"></input>\n\n          <input className=\"button\" id=\"put\" onClick={() => this.setState({\n            method: 'put',\n          })} type=\"button\" value=\"PUT\"></input>\n\n          <input className=\"button\" id=\"patch\" onClick={() => this.setState({\n            method: 'patch',\n          })} type=\"button\" value=\"PATCH\"></input>\n\n          <input className=\"button\" id=\"delete\" onClick={() => this.setState({\n            method: 'delete',\n          })} type=\"button\" value=\"DELETE\"></input>\n        </section>\n\n        <section id=\"apiRequest\">\n          <p>Request: {this.state.display}</p>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Form;","/**\n * Results\n * @component Results\n */\n\nimport React from 'react';\n\nclass Results extends React.Component {\n\n  render() {\n\n    if (!Object.keys(this.props.results).length) {\n\n      return (\n        <div id=\"results\">\n          <p>Please Can I has?? </p>\n          <section>\n            Not yet....\n          </section>\n        </div>\n      );\n\n    } else {\n\n      return (\n        <div id=\"results\">\n          <p>Count: {this.props.count}</p>\n          <section>\n            <ul>\n              {Object.keys(this.props.results).map((results, idx) => {\n                return (\n                  <li key={idx}>\n                    <a href={this.props.results[results]}>{results}</a>\n                  </li>\n                );\n              })}\n            </ul>\n          </section>\n        </div>\n      );\n    }\n  }\n}\n\n\nexport default Results;\n\n// Expects the count, headers, results to be sent in as props\n// Renders the count\n// Renders the Result Headers as “pretty” JSON\n// Renders the Result Body as “pretty” JSON","/**\n * Footer\n * @component Footer\n */\n\nimport React from 'react';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <p id=\"footer\">\n        &copy; 2020 Biermann - Code Fellows Project\n      </p>\n    );\n  }\n}\n\nexport default Footer;","/** App\n * Serves as the container for all sub-components\n */\n\nimport React from 'react';\nimport './design/design.scss';\nimport Header from './components/header/header.js';\nimport Form from './components/form/form.js';\nimport Results from './components/results/results.js';\nimport Footer from './components/footer/footer.js';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      count: 0,\n      results: [],\n    };\n\n    this.handleForm = this.handleForm.bind(this);\n  }\n\n  handleForm (count, results) {\n    this.setState({ count, results });\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Form handler={this.handleForm} />\n        <Results count={this.state.count} results={this.state.results} />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","// From class code\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\nconsole.log(App);\n\n// attach component to the DOM\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);"],"sourceRoot":""}