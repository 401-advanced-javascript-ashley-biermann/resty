{"version":3,"sources":["components/header/header.js","components/form/form.js","components/results/results.js","components/footer/footer.js","app.js","index.js"],"names":["Header","React","Component","Form","props","handleChange","event","setState","value","target","state","method","display","handleSubmit","bind","preventDefault","restOption","this","fetch","response","headers","JSON","stringify","json","data","results","handler","id","onSubmit","name","type","onChange","placeholder","className","onClick","Results","Object","keys","length","Footer","App","handleForm","console","log","rootElement","document","getElementById","ReactDOM","render"],"mappings":"sOAqBeA,G,6KAXX,OACE,kE,GAJeC,IAAMC,Y,wBC+EZC,E,kDA9Eb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAURC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEC,MAAOF,EAAMG,OAAOD,SAVpC,EAAKE,MAAQ,CACXF,MAAO,GACPG,OAAQ,MACRC,QAAS,IAGX,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBARH,E,kGAqBCR,G,sFAClBA,EAAMS,iBAEFC,EAAa,CACfL,OAAQM,KAAKP,MAAMC,Q,SAGAO,MAAMD,KAAKP,MAAMF,MAAOQ,G,cAAzCG,E,OACAC,EAAUC,KAAKC,UAAUH,EAASC,QAAS,KAAM,G,SACpCD,EAASI,O,OAAtBC,E,OACAC,EAAUJ,KAAKC,UAAUE,GAE7BP,KAAKb,MAAMsB,QAAQN,EAASK,G,uIAGpB,IAAD,OACP,OACE,yBAAKE,GAAG,QACN,0BAAMC,SAAUX,KAAKJ,cAEnB,8EAEA,2BAAOgB,KAAK,MAAMF,GAAG,WAAWG,KAAK,OAAOtB,MAAOS,KAAKP,MAAMF,MAAOuB,SAAUd,KAAKZ,aAAc2B,YAAY,QAE9G,2BAAOH,KAAK,SAASI,UAAU,SAASN,GAAG,eAAeG,KAAK,SAAStB,MAAM,QAGhF,6BAASmB,GAAG,WACV,2BAAOE,KAAK,MAAMI,UAAU,SAASN,GAAG,MAAMO,QAAS,kBAAM,EAAK3B,SAAS,CACzEI,OAAQ,SACNmB,KAAK,SAAStB,MAAM,QAExB,2BAAOqB,KAAK,OAAOI,UAAU,SAASN,GAAG,OAAOO,QAAS,kBAAM,EAAK3B,SAAS,CAC3EI,OAAQ,UACNmB,KAAK,SAAStB,MAAM,SAExB,2BAAOqB,KAAK,MAAMI,UAAU,SAASN,GAAG,MAAMO,QAAS,kBAAM,EAAK3B,SAAS,CACzEI,OAAQ,SACNmB,KAAK,SAAStB,MAAM,QAExB,2BAAOqB,KAAK,QAAQI,UAAU,SAASN,GAAG,QAAQO,QAAS,kBAAM,EAAK3B,SAAS,CAC7EI,OAAQ,WACNmB,KAAK,SAAStB,MAAM,UAExB,2BAAOqB,KAAK,SAASI,UAAU,SAASN,GAAG,SAASO,QAAS,kBAAM,EAAK3B,SAAS,CAC/EI,OAAQ,YACNmB,KAAK,SAAStB,MAAM,YAG1B,6BAASmB,GAAG,cACV,uCAAaV,KAAKP,MAAME,e,GAxEfX,IAAMC,W,gBCoCViC,E,uKA/BX,OAAKC,OAAOC,KAAKpB,KAAKb,MAAMqB,SAASa,OAajC,yBAAKX,GAAG,WACN,iCAEE,4BACE,kBAAC,IAAD,CAAYA,GAAG,cAAcH,KAAMP,KAAKb,MAAMgB,WAEhD,4BACE,kBAAC,IAAD,CAAYO,GAAG,cAAcH,KAAMP,KAAKb,MAAMqB,aAlBpD,yBAAKE,GAAG,WACN,kDACA,yD,GARY1B,IAAMC,WCSbqC,E,uKARX,OACE,uBAAGZ,GAAG,UAAN,iD,GAHe1B,IAAMC,WC+BZsC,E,kDA1Bb,aAAe,IAAD,8BACZ,gBACK9B,MAAQ,CACXU,QAAS,GACTK,QAAS,IAGX,EAAKgB,WAAa,EAAKA,WAAW3B,KAAhB,gBAPN,E,uDAUFM,EAASK,GACnBR,KAAKV,SAAS,CAAEa,UAASK,c,+BAIzB,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAMC,QAAST,KAAKwB,aACpB,kBAAC,EAAD,CAASrB,QAASH,KAAKP,MAAMU,QAASK,QAASR,KAAKP,MAAMe,UAC1D,kBAAC,EAAD,W,GArBUxB,IAAMC,WCLxBwC,QAAQC,IAAIH,GAGZ,IAAMI,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,kBAAC,EAAD,MAASJ,K","file":"static/js/main.5d394c6e.chunk.js","sourcesContent":["/**\n * Header\n * @component Header\n */\n\nimport React from 'react';\n\nclass Header extends React.Component {\n\n  render() {\n    return (\n      <h1\n        // onClick={() => this.props.handleState('state words')}\n      >\n        Resty ... A Simple ReST Client \n        {/* {this.props.words} */}\n      </h1>\n    );\n  }\n}\n\nexport default Header;","/**\n * Form\n * @component Form\n */\n\nimport React from 'react';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      method: 'get',\n      display: '',\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange = (event) => {\n    this.setState({ value: event.target.value });\n  }\n\n  // handleClick = (event) => {\n  //   event.preventDefault();\n  //   const { name, value } = event.target;\n  //   this.setState({ [name]: value }, () => console.log(this.state));\n  // }\n\n  async handleSubmit (event) {\n    event.preventDefault();\n\n    let restOption = {\n      method: this.state.method,\n    }\n\n    let response = await fetch(this.state.value, restOption);\n    let headers = JSON.stringify(response.headers, null, 2);\n    let data = await response.json();\n    let results = JSON.stringify(data);\n\n    this.props.handler(headers, results);\n  }\n\n  render() {\n    return (\n      <div id=\"form\">\n        <form onSubmit={this.handleSubmit}>\n\n          <legend>Enter API URL, and click on desired METHOD</legend>\n\n          <input name=\"url\" id=\"urlInput\" type=\"text\" value={this.state.value} onChange={this.handleChange} placeholder=\"URL\" />\n\n          <input name=\"submit\" className=\"button\" id=\"submitButton\" type=\"submit\" value=\"GO\" />\n        </form>\n\n        <section id=\"methods\">\n          <input name=\"get\" className=\"button\" id=\"get\" onClick={() => this.setState({\n            method: 'get',\n          })} type=\"button\" value=\"GET\" />\n\n          <input name=\"post\" className=\"button\" id=\"post\" onClick={() => this.setState({\n            method: 'post',\n          })} type=\"button\" value=\"POST\" />\n\n          <input name=\"put\" className=\"button\" id=\"put\" onClick={() => this.setState({\n            method: 'put',\n          })} type=\"button\" value=\"PUT\" />\n\n          <input name=\"patch\" className=\"button\" id=\"patch\" onClick={() => this.setState({\n            method: 'patch',\n          })} type=\"button\" value=\"PATCH\" />\n\n          <input name=\"delete\" className=\"button\" id=\"delete\" onClick={() => this.setState({\n            method: 'delete',\n          })} type=\"button\" value=\"DELETE\" />\n        </section>\n\n        <section id=\"apiRequest\">\n          <p>Request: {this.state.display}</p>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Form;","/**\n * Results\n * @component Results\n */\n\nimport React from 'react';\nimport JSONPretty from 'react-json-pretty';\n\nclass Results extends React.Component {\n\n  render() {\n\n    if (!Object.keys(this.props.results).length) {\n      return (\n        <div id=\"results\">\n          <p>Please Can I Has?? </p>\n          <section>\n            Wait for it ...\n          </section>\n        </div>\n      );\n\n    } else {\n\n      return (\n        <div id=\"results\">\n          <section>\n\n            <ul>\n              <JSONPretty id=\"json-pretty\" data={this.props.headers}></JSONPretty>\n            </ul>\n            <ul>\n              <JSONPretty id=\"json-pretty\" data={this.props.results}></JSONPretty>\n            </ul>\n\n          </section>\n        </div>\n      );\n    }\n  }\n}\n\n\nexport default Results;\n\n// Expects the count, headers, results to be sent in as props\n// Renders the count\n// Renders the Result Headers as “pretty” JSON\n// Renders the Result Body as “pretty” JSON","/**\n * Footer\n * @component Footer\n */\n\nimport React from 'react';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <p id=\"footer\">\n        &copy; 2020 Biermann - Code Fellows Project\n      </p>\n    );\n  }\n}\n\nexport default Footer;","/** App\n * Serves as the container for all sub-components\n */\n\nimport React from 'react';\nimport './design/design.scss';\nimport Header from './components/header/header.js';\nimport Form from './components/form/form.js';\nimport Results from './components/results/results.js';\nimport Footer from './components/footer/footer.js';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      headers: '',\n      results: '',\n    };\n\n    this.handleForm = this.handleForm.bind(this);\n  }\n// remove count, add headers\n  handleForm (headers, results) {\n    this.setState({ headers, results });\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Form handler={this.handleForm} />\n        <Results headers={this.state.headers} results={this.state.results} />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","// From class code\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\nconsole.log(App);\n\n// attach component to the DOM\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);"],"sourceRoot":""}